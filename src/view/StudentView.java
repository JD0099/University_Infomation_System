package view;

import controller.AppliEffectivenessHandler;
import controller.StudentInfoHandler;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * 로그인한 학생의 정보를 보여주는 Boundary Class.
 *
 * @author user
 */
public class StudentView extends javax.swing.JFrame {

    /**
     * Creates new form Student
     */
    DefaultTableModel model;
    ModifyInfoView mView;
    ScoreCheckView scoreView;
    ArrayList<String> appliData = new ArrayList<>();
    ArrayList<String> checkSum = new ArrayList<>();
    StudentInfoHandler sHandler = new StudentInfoHandler();
    AppliEffectivenessHandler aeHandler = new AppliEffectivenessHandler();

    String s_id;
    String c_id;
    String credit;
    String chkCredit;
    boolean chk;

    public StudentView() {

    }

    public StudentView(String s_id) {
        this.s_id = s_id;

        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        setTitle("수강 신청");
        setVisible(true);
        setResizable(false);
        setLocationRelativeTo(null);

        model = (DefaultTableModel) this.jCourseTable.getModel();

        model.setNumRows(0); //테이블에 정보가 중복해서 저장되지 않도록 테이블 초기화
        if (sHandler.getShowInfo(s_id) == true) {
            for (int i = 0; i < sHandler.getShowInfoData().size(); i = i + 7) {
                model.addRow(new Object[]{
                    sHandler.getShowInfoData().get(i),
                    sHandler.getShowInfoData().get(i + 1),
                    sHandler.getShowInfoData().get(i + 2),
                    sHandler.getShowInfoData().get(i + 3),
                    sHandler.getShowInfoData().get(i + 4),
                    sHandler.getShowInfoData().get(i + 5),
                    sHandler.getShowInfoData().get(i + 6),
                    Boolean.FALSE
                });
            }
            if (sHandler.getCreditSum(s_id) == true) {
                credit = sHandler.getCreditSumData();
                jCreditLabel.setText(credit);
            } else {
                JOptionPane.showMessageDialog(null, "신청학점 조회에 실패하였습니다.", "신청학점 조회 실패", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "테이블 조회에 실패하였습니다.", "테이블 조회 실패", JOptionPane.WARNING_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jChangePassword = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jCourseTable = new javax.swing.JTable();
        jScoreChk = new javax.swing.JButton();
        jCloseBtn = new javax.swing.JButton();
        jAppliBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jShowBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jCreditLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("굴림", 0, 36)); // NOI18N
        jLabel1.setText("수강신청");

        jChangePassword.setText("비밀번호 변경");
        jChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChangePasswordActionPerformed(evt);
            }
        });

        jCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "강좌번호", "강좌이름", "담당학과", "학점 수", "담당교수", "최소 학생수", "최대 학생수", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jCourseTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jCourseTable);
        if (jCourseTable.getColumnModel().getColumnCount() > 0) {
            jCourseTable.getColumnModel().getColumn(0).setResizable(false);
            jCourseTable.getColumnModel().getColumn(1).setResizable(false);
            jCourseTable.getColumnModel().getColumn(2).setResizable(false);
            jCourseTable.getColumnModel().getColumn(3).setResizable(false);
            jCourseTable.getColumnModel().getColumn(4).setResizable(false);
            jCourseTable.getColumnModel().getColumn(5).setResizable(false);
            jCourseTable.getColumnModel().getColumn(6).setResizable(false);
            jCourseTable.getColumnModel().getColumn(7).setResizable(false);
        }

        jScoreChk.setText("성적 확인");
        jScoreChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jScoreChkActionPerformed(evt);
            }
        });

        jCloseBtn.setText("닫기");
        jCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCloseBtnActionPerformed(evt);
            }
        });

        jAppliBtn.setText("수강 신청");
        jAppliBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAppliBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("신청 학점 : ");

        jShowBtn.setText("조   회");
        jShowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowBtnActionPerformed(evt);
            }
        });

        jCreditLabel.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jChangePassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCreditLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScoreChk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCloseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jAppliBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jShowBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jChangePassword)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jCreditLabel)))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jAppliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScoreChk, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jShowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)
                        .addComponent(jCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChangePasswordActionPerformed
        // TODO add your handling code here:
        mView = new ModifyInfoView(s_id);
    }//GEN-LAST:event_jChangePasswordActionPerformed

    private void jScoreChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jScoreChkActionPerformed
        // TODO add your handling code here:
        scoreView = new ScoreCheckView(s_id);

    }//GEN-LAST:event_jScoreChkActionPerformed

    private void jCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCloseBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jCloseBtnActionPerformed

    private void jAppliBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAppliBtnActionPerformed
        appliData.clear();

        for (int i = 0; i < jCourseTable.getRowCount(); i++) {
            chk = (boolean) jCourseTable.getValueAt(i, 7);
            if (chk == true) {
                c_id = (String) jCourseTable.getValueAt(i, 0);
                chkCredit = (String) jCourseTable.getValueAt(i, 3);
                appliData.add(s_id);
                appliData.add(c_id);
                checkSum.add(chkCredit);
            }
        }
        if (aeHandler.checkCreditSum(credit, checkSum) == true) {
            if (!appliData.isEmpty()) {
                if (aeHandler.checkMaxEnroll(c_id) == true) {
                    if (sHandler.setClassApplication(appliData) == true && !appliData.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "수강 신청에 성공하셨습니다.", "수강 신청 성공", JOptionPane.PLAIN_MESSAGE);
                        if (sHandler.getCreditSum(s_id) == true) {
                            credit = sHandler.getCreditSumData();
                            jCreditLabel.setText(credit);
                            sHandler.setStuHackjum(s_id, credit);
                        } else {
                            JOptionPane.showMessageDialog(null, "신청학점 조회에 실패하였습니다.", "신청학점 조회 실패", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "수강 신청에 실패하셨습니다.", "수강 신청 실패", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "정원 초과로 수강신청에 실패하였습니다.", "수강 신청 실패", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "수강신청할 강좌를 선택해주세요.", "수강신청 실패", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "18학점 이상 신청하실 수 없습니다.", "수강 신청 실패", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jAppliBtnActionPerformed

    private void jShowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowBtnActionPerformed
        // TODO add your handling code here:
        sHandler.getShowInfoData().clear();
        model.setNumRows(0); //테이블에 정보가 중복해서 저장되지 않도록 테이블 초기화
        if (sHandler.getShowInfo(s_id) == true) {
            for (int i = 0; i < sHandler.getShowInfoData().size(); i = i + 7) {
                model.addRow(new Object[]{
                    sHandler.getShowInfoData().get(i),
                    sHandler.getShowInfoData().get(i + 1),
                    sHandler.getShowInfoData().get(i + 2),
                    sHandler.getShowInfoData().get(i + 3),
                    sHandler.getShowInfoData().get(i + 4),
                    sHandler.getShowInfoData().get(i + 5),
                    sHandler.getShowInfoData().get(i + 6),
                    Boolean.FALSE
                });
            }
        } else {
            JOptionPane.showMessageDialog(null, "테이블 조회에 실패하였습니다.", "테이블 조회 실패", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jShowBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAppliBtn;
    private javax.swing.JButton jChangePassword;
    private javax.swing.JButton jCloseBtn;
    private javax.swing.JTable jCourseTable;
    private javax.swing.JLabel jCreditLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jScoreChk;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jShowBtn;
    // End of variables declaration//GEN-END:variables
}
