/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CourseInfoHandler;
import controller.CourseEffectivenessHandler;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * 각 수업 담당자의 화면을 보여주는 Boundary Class.
 *
 * @author Sungrae
 */
public class CourseView extends javax.swing.JFrame {

    /**
     * Creates new form CourseView
     */
    private static Logger logger = Logger.getLogger(CourseView.class.getName());

    private String cId;
    private String u_id;
    private String dName;
    private String des;
    private boolean chk;

    DefaultTableModel model; //테이블을 만든다
    CreateCourseView create;
    OpenCourseView open;
    CourseModifyView modify;
    ModifyInfoView modifyInfoView;
    RequestTuitionBillView requestView;
    ArrayList<String> dArray = new ArrayList<>();
    CourseInfoHandler cHandler = new CourseInfoHandler();
    CourseEffectivenessHandler cEHandler = new CourseEffectivenessHandler();

    public CourseView() {
    }

    public CourseView(String u_id) {
        this.u_id = u_id;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        //창을 껐을때 프로그램이 종료되지 않게 하기 위해

        setTitle("수업 관리");
        setVisible(true);
        setResizable(false); //프레임 크기 조정 x
        setLocationRelativeTo(null); //프레임을 중앙으로 배치.

        model = (DefaultTableModel) this.infoTable.getModel();

        model.setNumRows(0); //테이블에 정보가 중복해서 저장되지 않도록 테이블 초기화
        if (cHandler.showState() == true) {
            for (int i = 0; i < cHandler.getShowInfoData().size(); i = i + 7) {
                model.addRow(new Object[]{
                    cHandler.getShowInfoData().get(i),
                    cHandler.getShowInfoData().get(i + 1),
                    cHandler.getShowInfoData().get(i + 2),
                    cHandler.getShowInfoData().get(i + 3),
                    cHandler.getShowInfoData().get(i + 4),
                    cHandler.getShowInfoData().get(i + 5),
                    cHandler.getShowInfoData().get(i + 6),
                    Boolean.FALSE
                });
            }
        } else {
            JOptionPane.showMessageDialog(null, "테이블 조회에 실패하였습니다.", "테이블 조회 실패", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        infoTable = new javax.swing.JTable();
        jChangePwdBtn = new javax.swing.JButton();
        jRequestBill = new javax.swing.JButton();
        jCreateBtn = new javax.swing.JButton();
        jdescBtn = new javax.swing.JButton();
        jOpenBtn = new javax.swing.JButton();
        jModifyBtn = new javax.swing.JButton();
        jShowBtn = new javax.swing.JButton();
        jDeleteBtn = new javax.swing.JButton();
        jCloseBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("굴림", 0, 36)); // NOI18N
        jLabel1.setText("수업관리");

        infoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "강좌 번호", "강좌 이름", "학과", "학점 수", "담당 교수", "최소 학생 수", "최대 학생 수", "삭제할 항목 체크"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        infoTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(infoTable);
        if (infoTable.getColumnModel().getColumnCount() > 0) {
            infoTable.getColumnModel().getColumn(0).setResizable(false);
            infoTable.getColumnModel().getColumn(1).setResizable(false);
            infoTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            infoTable.getColumnModel().getColumn(2).setResizable(false);
            infoTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            infoTable.getColumnModel().getColumn(3).setResizable(false);
            infoTable.getColumnModel().getColumn(4).setResizable(false);
            infoTable.getColumnModel().getColumn(5).setResizable(false);
            infoTable.getColumnModel().getColumn(6).setResizable(false);
            infoTable.getColumnModel().getColumn(7).setResizable(false);
            infoTable.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        jChangePwdBtn.setText("비밀번호 변경");
        jChangePwdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChangePwdBtnActionPerformed(evt);
            }
        });

        jRequestBill.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        jRequestBill.setText("수강료 청구서 발급");
        jRequestBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRequestBillActionPerformed(evt);
            }
        });

        jCreateBtn.setText("등록");
        jCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCreateBtnActionPerformed(evt);
            }
        });

        jdescBtn.setText("강좌 설명");
        jdescBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDescBtnActionPerformed(evt);
            }
        });

        jOpenBtn.setText("강의 개설");
        jOpenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenBtnActionPerformed(evt);
            }
        });

        jModifyBtn.setText("수정");
        jModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jModifyBtnActionPerformed(evt);
            }
        });

        jShowBtn.setText("조회");
        jShowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowBtnActionPerformed(evt);
            }
        });

        jDeleteBtn.setText("삭제");
        jDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteBtnActionPerformed(evt);
            }
        });

        jCloseBtn.setText("닫기");
        jCloseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCloseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jChangePwdBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRequestBill)
                        .addGap(26, 26, 26))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jShowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jOpenBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdescBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCreateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jModifyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jChangePwdBtn)
                            .addComponent(jRequestBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jCreateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jdescBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jOpenBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jModifyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jShowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCloseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCreateBtnActionPerformed

        create = new CreateCourseView();

    }//GEN-LAST:event_jCreateBtnActionPerformed

    private void jCloseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCloseBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jCloseBtnActionPerformed

    private void jOpenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenBtnActionPerformed
        // TODO add your handling code here:
        int row = infoTable.getSelectedRow();
        if (cEHandler.infoTableRowCheck(row) == true) {
            cId = (String) infoTable.getValueAt(row, 0);
            dName = (String) infoTable.getValueAt(row, 2);
            System.out.println(dName);
            if (cEHandler.checkOpenCourse(cId) == true) {
                open = new OpenCourseView(cId, dName);
            } else {
                JOptionPane.showMessageDialog(null, "개설된 강의 또는 등록되지 않은 \n강의는 개설할 수 없습니다.", "개설 실패", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "개설할 강의를 클릭해주세요.", "개설 실패", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jOpenBtnActionPerformed

    private void jDescBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDescBtnActionPerformed

        int row = infoTable.getSelectedRow();
        if (cEHandler.infoTableRowCheck(row) == true) {
            cId = (String) infoTable.getValueAt(row, 0);
            cHandler.getRowValue(cId);
            des = cHandler.getDesc();
            if (cHandler.getRowValue(cId) == true) {
                JOptionPane.showMessageDialog(null, des, "강좌 정보", JOptionPane.PLAIN_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "테이블 조회에 실패하였습니다.", "테이블 조회 실패", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "강의 설명을 볼 강의를 클릭해주세요.", "설명 보기 실패", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jDescBtnActionPerformed

    private void jShowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowBtnActionPerformed
        // TODO add your handling code here:
        cHandler.getShowInfoData().clear();
        model.setNumRows(0); //테이블에 정보가 중복해서 저장되지 않도록 테이블 초기화
        if (cHandler.showState() == true) {
            for (int i = 0; i < cHandler.getShowInfoData().size(); i = i + 7) {
                model.addRow(new Object[]{
                    cHandler.getShowInfoData().get(i),
                    cHandler.getShowInfoData().get(i + 1),
                    cHandler.getShowInfoData().get(i + 2),
                    cHandler.getShowInfoData().get(i + 3),
                    cHandler.getShowInfoData().get(i + 4),
                    cHandler.getShowInfoData().get(i + 5),
                    cHandler.getShowInfoData().get(i + 6),
                    Boolean.FALSE
                });
            }
        } else {
            JOptionPane.showMessageDialog(null, "테이블 조회에 실패하였습니다.", "테이블 조회 실패", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jShowBtnActionPerformed

    private void jChangePwdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChangePwdBtnActionPerformed
// TODO add your handling code here:
        modifyInfoView = new ModifyInfoView(u_id);
    }//GEN-LAST:event_jChangePwdBtnActionPerformed

    private void jModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jModifyBtnActionPerformed
        // TODO add your handling code here:
        int row = infoTable.getSelectedRow();
        if (cEHandler.infoTableRowCheck(row) == true) {
            cId = (String) infoTable.getValueAt(row, 0);
            if (cEHandler.checkModifyCourse(cId) == true) {
                modify = new CourseModifyView(cId);
                infoTable.updateUI();
            } else {
                JOptionPane.showMessageDialog(null, "개설된 강좌는 수정할 수 없습니다.", "수정 실패", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "수정할 강좌를 클릭해주세요.", "수정 실패", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jModifyBtnActionPerformed

    private void jDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteBtnActionPerformed
        // TODO add your handling code here:
        dArray.clear();
        int row = infoTable.getSelectedRow();
        if (cEHandler.infoTableRowCheck(row) == false) {
            JOptionPane.showMessageDialog(null, "삭제할 강좌를 선택해주세요.", "삭제 실패", JOptionPane.WARNING_MESSAGE);
        } else {
            for (int i = 0; i < infoTable.getRowCount(); i++) {
                chk = (boolean) infoTable.getValueAt(i, 7);
                if (chk == true) {
                    cId = (String) infoTable.getValueAt(i, 0);
                    dArray.add(cId);
                }
            }
            if (cEHandler.checkDeleteCourse(dArray) == true) {
                System.out.println(dArray);
                if (cHandler.getDeleteCourseInfo(dArray) == true && !dArray.isEmpty()) {
                    logger.log(Level.SEVERE, "삭제가 잘 됨");
                    JOptionPane.showMessageDialog(null, "강좌 삭제에 성공하셨습니다.", "삭제 성공", JOptionPane.PLAIN_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "삭제할 강좌를 체크해주셔야합니다.", "삭제 실패", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "개설된 강좌는 삭제할 수 없습니다.", "삭제 실패", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jDeleteBtnActionPerformed

    private void jRequestBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRequestBillActionPerformed
        // TODO add your handling code here:
        requestView = new RequestTuitionBillView();
    }//GEN-LAST:event_jRequestBillActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable infoTable;
    private javax.swing.JButton jChangePwdBtn;
    private javax.swing.JButton jCloseBtn;
    private javax.swing.JButton jCreateBtn;
    private javax.swing.JButton jDeleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jModifyBtn;
    private javax.swing.JButton jOpenBtn;
    private javax.swing.JButton jRequestBill;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jShowBtn;
    private javax.swing.JButton jdescBtn;
    // End of variables declaration//GEN-END:variables

}
